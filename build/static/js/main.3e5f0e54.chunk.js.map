{"version":3,"sources":["components/UI/Card.js","components/ExpenseDate.js","components/ExpenseItem.js","components/ExpensesFilter.js","components/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart.js","components/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDatapoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","random","onAddExpense","onCancel","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e5f0e54.chunk.js","sourcesContent":["import './Card.css';\n\nfunction Card(props) {\n   const classes = 'card ' + props.className;\n\n\n    return <div className={classes}>{props.children}</div>;   \n\n}\n \nexport default Card ;","import './ExpenseDate.css';\nimport ExpenseItem from './ExpenseItem';\nfunction ExpenseDate (props) {\n    const month = props.date.toLocaleString('en-US',{ month:'long' });\n    const year = props.date.getFullYear();\n    const day = props.date.toLocaleString('en-US',{ day:'2-digit' });\n    \n  return (\n<div className=\"expense-date\">\n    <div className=\"expense-date__month\">{month}</div>\n    <div className=\"expense-date__year \">{year}</div>\n    <div className=\"expense-date__day   \">{day}</div>\n</div>\n  );  \n   \n}\nexport default ExpenseDate;","import Card from './UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\nimport { useState } from 'react';\n\nfunction ExpenseItem(props) {\nfunction clickHandler(){setTitle('its changed'); console.log('updated')} \n \nconst [title,setTitle] = useState (props.title); \n\n  return (\n        <Card className=\"expense-item\">\n            <ExpenseDate date ={props.date}></ExpenseDate>\n            <div className=\"expense-item__description\"><h2>{title}</h2>\n            <div className=\"expense-item__price\">${props.amount}</div>\n            </div>\n            <button onClick={clickHandler}>change title</button>\n        </Card>\n    );\n}\n\nexport default ExpenseItem;         \n\n\n","import react,{usestate} from 'react';\n\nimport './ExpensesFilter.css';\n\n\nfunction ExpensesFilter (props){\n\n\n\nfunction filterchangehandler (event) {\n  props.onChangeFilter(event.target.value)  \n};    \n    \n\nreturn (\n\n<div className='expenses-filter'>\n<div className='expenses-filter__control'>\n<label >Filter by year</label>\n<select value={props.selected} onChange={filterchangehandler}>\n<option value='2022'>2022</option>   \n<option value='2021'>2021</option>\n<option value='2020'>2020</option>\n<option value='2019'>2019</option> \n</select>    \n</div>    \n</div>    \n);    \n}\n\nexport default ExpensesFilter","import React from \"react\"\nimport ExpenseItem from \"./ExpenseItem\";\nimport Expenses from \"./Expenses\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport './ExpensesList.css'\n\nfunction ExpensesList (props)\n{\n    if (props.items.length === 0) {\n     return <h2 className='expenses-list__fallback'>Found no Expenses.</h2>\n    }\n    return (\n        <ul className='expenses-list'>\n         {props.items.map((expense)=>(\n         <ExpenseItem \n          title = {expense.title} \n          amount = {expense.amount}\n          date = {expense.date}></ExpenseItem>\n           ))} \n        </ul>\n   )\n    \n};\n\n\n\n\n  export default ExpensesList;\n  ","import react from \"react\"\nimport './ChartBar.css';\n\nfunction ChartBar (props){\n    \n let barFillHeight = '0%';\n\n if (props.maxValue>0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\n }\n    \nreturn <div className='chart-bar'>\n<div className='chart-bar__inner'>\n  <div\n    className='chart-bar__fill'\n    style={{ height: barFillHeight }}\n  ></div>\n</div>\n<div className='chart-bar__label'>{props.label}</div>\n</div>\n}\n\nexport default ChartBar ","\nimport react from \"react\";\nimport ChartBar from './ChartBar'\nimport './Chart.css'\n\n\nfunction Chart (props){\n\nconst dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);     \nconst totalMaximum =  Math.max(...dataPointValues)\n\nreturn <div className=\"chart\">\n    {props.dataPoints.map((dataPoint) => ( <ChartBar \n    key={dataPoint.label}\n    value ={dataPoint.value}\n    maxValue={totalMaximum} \n    label={dataPoint.label}></ChartBar>\n    ))}\n    </div>\n\n}\n\nexport default Chart ;","import react from \"react\";\nimport Chart from \"./Chart/Chart\";\n\nfunction ExpensesChart (props){\n\nconst chartDatapoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },]    \n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDatapoints[expenseMonth].value += expense.amount;\n    }\n    \n    return <Chart dataPoints={chartDatapoints}></Chart>        \n\n}\n\nexport default ExpensesChart ;","\nimport Card from './UI/Card';\nimport  './Expense.css';\nimport ExpensesFilter from './ExpensesFilter'\nimport ExpensesList from './ExpensesList';\nimport  React, { useState } from 'react'\nimport ExpensesChart from './ExpensesChart';\n\nfunction Expenses(props) {\n   \nconst [filteredYear,setFilteredYear] = useState('2020');\n\nfunction filterchangehandler (selectedYear) {\n  setFilteredYear(selectedYear)\n}\n\nconst filteredExpenses = props.items.filter(expense => {\n  return expense.date.getFullYear().toString() === filteredYear;\n});\n\n    return (\n<div>\n      <Card className='expenses'>\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterchangehandler}\n        />\n        <ExpensesChart expenses = {filteredExpenses}></ExpensesChart>\n         <ExpensesList items={filteredExpenses} />\n        \n      </Card>\n    </div>  \n    \n    ); \n}\nexport default Expenses;"," \nimport './ExpenseForm.css';\nimport { useState } from 'react';\n\nfunction ExpenseForm (props){\n\nconst [enteredTitle, setEnteredTitle] = useState('');\nconst [enteredAmount, setEnteredAmount] = useState('');\nconst [enteredDate, setEnteredDate] = useState('');\n\nfunction titleChangeHandler (event){\n    setEnteredTitle(event.target.value)};\n    \nfunction amountChangeHandler (event){\n        setEnteredAmount(event.target.value)};\n        \nfunction dateChangeHandler (event){\n        setEnteredDate(event.target.value)};\n\n\nfunction submithandler (event){\n    event.preventDefault();\n       \n\nconst expenseData =  {\n    title : enteredTitle,\n    amount : enteredAmount,\n    date :  new Date(enteredDate)\n};\n\nprops.onSaveExpenseData(expenseData);\nsetEnteredTitle('');\nsetEnteredAmount('');\nsetEnteredDate('');\n};\n\n   return (\n    <form onSubmit={submithandler}>\n        <div className='new-expense__controls' >\n           \n        <div className='new-expense__control' >\n             <label>Title</label>\n             <input type = \"text\" value={enteredTitle} onChange={titleChangeHandler}></input>\n        </div>\n\n        <div className='new-expense__control' >\n             <label>Amount</label>\n             <input type = \"number\" value={enteredAmount} min = \"0.01\" step = \"0.01\" onChange={amountChangeHandler}></input>\n            </div>\n\n            <div className='new-expense__control' >\n             <label>Date</label>\n             <input type = \"date\" value={enteredDate} min = \"2019-01-01\" max = \"31-12-2022\" onChange={dateChangeHandler}></input>\n            </div>\n\n            <div className='new-expense__actions'></div>\n            <button type='submit'>Add Expense</button>\n        </div>\n    </form>   \n   \n   );\n    \n \n};\n\nexport default ExpenseForm;","import './NewExpense.css';\nimport './ExpenseForm';\nimport ExpenseForm from './ExpenseForm';\nimport { useState } from 'react/cjs/react.development';\n\n\nconst NewExpense = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n  \n    const saveExpenseDataHandler = (enteredExpenseData) => {\n      const expenseData = {\n        ...enteredExpenseData,\n        id: Math.random().toString(),\n      };\n      props.onAddExpense(expenseData);\n      setIsEditing(false);\n    };\n  \n    const startEditingHandler = () => {\n      setIsEditing(true);\n    };\n  \n    const stopEditingHandler = () => {\n      setIsEditing(false);\n    };\n  \n    return (\n      <div className='new-expense'>\n        {!isEditing && (\n          <button onClick={startEditingHandler}>Add New Expense</button>\n        )}\n        {isEditing && (\n          <ExpenseForm\n            onSaveExpenseData={saveExpenseDataHandler}\n            onCancel={stopEditingHandler}\n          />\n        )}\n      </div>\n    );\n  };\n\n\n\nexport default NewExpense;","\nimport React,{ useState } from 'react/cjs/react.development';\nimport ExpenseItem from './components/ExpenseItem';\nimport Expenses from './components/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\n\nconst DUMMY_EXPENSES =\n[\n  {\n    title: 'car insurance',\n    amount: 294.67,\n    date: new Date(2021, 3, 24)\n  },\n  {\n    title: 'bike insurance',\n    amount: 100.67,\n    date: new Date(2021, 3, 26)\n  },\n  {\n    title: 'auto insurance',\n    amount: 500.67,\n    date: new Date(2021, 3, 27) \n  },\n  {\n    title: 'cycle insurance',\n    amount: 29.67,\n    date: new Date(2021, 3, 29)\n  }\n]\n\n\nconst  App = () => {\n\n const [expenses,setExpenses] =  useState(DUMMY_EXPENSES);\n\n  \n  \n  \n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  \n    return (\n    <div>\n    <NewExpense onAddExpense ={addExpenseHandler}></NewExpense>\n     <Expenses  items={expenses} ></Expenses>\n    \n    </div>\n  );\n}\nexport default App;\n\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}