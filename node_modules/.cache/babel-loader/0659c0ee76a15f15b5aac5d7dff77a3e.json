{"ast":null,"code":"var _jsxFileName = \"/home/arpit/Desktop/01-starting-setup/src/components/NewExpense/NewExpense.js\";\nimport './NewExpense.css';\nimport './ExpenseForm';\nimport ExpenseForm from './ExpenseForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewExpense(props) {\n  function saveExpenseDataHandler(enteredExpenseData) {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  }\n\n  ;\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onCancel: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_c = NewExpense;\n;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/home/arpit/Desktop/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["ExpenseForm","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","setIsEditing","startEditingHandler","stopEditingHandler","isEditing"],"mappings":";AAAA,OAAO,kBAAP;AACA,OAAO,eAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA2B;AAE3B,WAASC,sBAAT,CAAiCC,kBAAjC,EAAoD;AAChD,UAAMC,WAAW,GAAG,EAChB,GAAGD,kBADa;AAEhBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFY,KAApB;AAIEP,IAAAA,KAAK,CAACQ,YAAN,CAAmBL,WAAnB;AACAM,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAAA;;AAED,QAAMC,mBAAmB,GAAG,MAAM;AAChCD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAME,kBAAkB,GAAG,MAAM;AAC/BF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACG,CAACG,SAAD,iBACC;AAAQ,MAAA,OAAO,EAAEF,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIGE,SAAS,iBACR,QAAC,WAAD;AACE,MAAA,iBAAiB,EAAEX,sBADrB;AAEE,MAAA,QAAQ,EAAEU;AAFZ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KAhCMZ,U;AAgCN;AAGH,eAAeA,UAAf","sourcesContent":["import './NewExpense.css';\nimport './ExpenseForm';\nimport ExpenseForm from './ExpenseForm';\n\nfunction NewExpense (props){\n\nfunction saveExpenseDataHandler (enteredExpenseData){\n    const expenseData = {\n        ...enteredExpenseData,\n        id: Math.random().toString()\n      };\n      props.onAddExpense(expenseData);\n      setIsEditing(false);\n    };\n  \n    const startEditingHandler = () => {\n      setIsEditing(true);\n    };\n  \n    const stopEditingHandler = () => {\n      setIsEditing(false);\n    };\n  \n    return (\n      <div className='new-expense'>\n        {!isEditing && (\n          <button onClick={startEditingHandler}>Add New Expense</button>\n        )}\n        {isEditing && (\n          <ExpenseForm\n            onSaveExpenseData={saveExpenseDataHandler}\n            onCancel={stopEditingHandler}\n          />\n        )}\n      </div>\n    );\n  };\n\n\nexport default NewExpense;"]},"metadata":{},"sourceType":"module"}